#!/bin/bash
#
# organizer by Vempire Lord 2001-2008
#

DB_DIR="$HOME/.organizer"
# imieniy data base:
DB_IM="$DB_DIR/imieniny"
# events data base (user-defined)
DB_E="$DB_DIR/events"

# state files
NOW_F="$DB_DIR/state/now"
LAST_F="$DB_DIR/state/last"

# const value representing length of a day in [s]
DAY=$((24*60*60))

# prints events for a given day
#  print_events "year" "month" "day"
function print_events
{
  # this ensures that '0n' and 'n' will be the same
  Y="$1"
  M="`sed 's:^0\+::' <<< "$2"`"
  D="`sed 's:^0\+::' <<< "$3"`"
  # for output we use always 0-paded version ('0n')
  grep -v ' *#.*$' "$DB_E" | \
    egrep "^($Y|\*) +(0*$M|\*) +(0*$D|\*) +" | \
    sed "s:^[^ ]\+ \+[^ ]\+ \+[^ ]\+ \+:$1.$2.$3 :"
}

# set of functions converting timestamp to Y/M/D
function ts2date_space
{
  date -d "@$1" '+%Y %m %d'
}
function ts2date
{
  date -d "@$1" '+%Y.%m.%d'
}

# write down current date/time
TS="`date +%s`"

# 'now' needs to be updated?
now=" `cat "$NOW_F" `"
last="`cat "$LAST_F"`"
if [ "`ts2date $now`" != "`ts2date $TS`" ]
then
  cat  "$NOW_F" > "$LAST_F"
  echo "$TS"    > "$NOW_F"
  now="` cat "$NOW_F"`"
  last="`cat "$LAST_F"`"
fi

ts_cur="$last"
ts_end="$now"
# loop through all past days
skip_first=true
while [ "`ts2date $ts_cur`" != "`ts2date $ts_end`" ]
do
  print_ts="$ts_cur"
  ((ts_cur+=$DAY))
  # last day has been already seen so we can skip it
  $skip_first && skip_first=false && continue
  print_events `ts2date_space $print_ts`
done
# print today's events
print_events `ts2date_space $TS`

# print dates from 'imieniny' database
IM_DATE_FULL="`ts2date $TS`"
IM_DATE="`ts2date_space $TS | sed 's:^[0-9]\+ \+::'`"
grep "^$IM_DATE" "$DB_IM" | \
  sed "s:^[0-9]\+ \+[0-9]\+ \+:$IM_DATE_FULL *   imieniny :"

exit 0
